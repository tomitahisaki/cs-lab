name: Weekly Plan (auto)
on:
  schedule:
    - cron: "0 1 * * 0"   # Sun 01:00 UTC = Sun 10:00 JST
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  open-issue:
    name: Open weekly plan issue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            // Compute JST week [Mon..Sun]
            function jstNow() { return new Date(Date.now() + 9*60*60*1000); }

            function weekRangeFromDateJST(baseDate) {
              // baseDate は「JST相当のUTC値」を持つ Date
              const d = new Date(baseDate.getTime());
              const wd = d.getUTCDay(); // 0..6 (Sun..Sat) ← JST を UTC フィールドで表現しているのでOK
              const mondayDiff = d.getUTCDate() - wd + (wd === 0 ? -6 : 1);
              const mon = new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), mondayDiff));
              const sun = new Date(Date.UTC(d.getUTCFullYear(), d.getUTCMonth(), mondayDiff + 6));
              const fmt = x => x.toISOString().slice(0, 10); // "YYYY-MM-DD" (UTC表記だが日付はJSTの暦と一致)
              return [fmt(mon), fmt(sun)];
            }

            // define base day if work on sunday, this issue for next week
            function nextWeekBaseIfSundayJST() {
              const now = jstNow();
              if (now.getUTCDay() === 0) { // Sunday in JST
                const nextDay = new Date(now.getTime());
                nextDay.setUTCDate(nextDay.getUTCDate() + 1); // 月曜に進める
                return nextDay;
              }
              return now; // それ以外は今週
            }

            const base = nextWeekBaseIfSundayJST();
            const [from, to] = weekRangeFromDateJST(base);
            const title = `This Week Plan (${from}-${to})`;
            const body = [
              "## Focus (pick max 3)",
              "- [ ] CS topic",
              "- [ ] Algorithms (2 problems)",
              "- [ ] System design mini",
              "- [ ] English summary (1 post)",
              "",
              "## Tasks",
              "- [ ] Read (OSTEP/Go Blog) - 1.5h",
              "- [ ] Algorithms (AtCoder/LeetCode) - 1.5h",
              "- [ ] Implementation (Go) - 3h",
              "- [ ] English write-up - 1-2h",
              "",
              "## Notes",
              ""
            ].join("\n");

            // Create only if not exists (exact match)
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open",
              per_page: 100
            });
            const exists = issues.some(i => i.title === title);
            if (!exists) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ["weekly"]
              });
              core.info(`Created: ${title}`);
            } else {
              core.info(`Already exists: ${title}`);
            }

